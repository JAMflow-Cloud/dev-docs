[{"data":1,"prerenderedAt":1011},["ShallowReactive",2],{"navigation_docs_en":3,"-en-auth-module-client-guide":30,"-en-auth-module-client-guide-surround":1007},[4],{"title":5,"path":6,"stem":7,"children":8,"page":29},"Auth Module","/en/auth-module","en/1.auth-module",[9,14,19,24],{"title":10,"path":11,"stem":12,"icon":13},"Auth Module: Getting Started","/en/auth-module/getting-started","en/1.auth-module/1.getting-started","i-lucide-user-lock",{"title":15,"path":16,"stem":17,"icon":18},"Client Guide","/en/auth-module/client-guide","en/1.auth-module/2.client-guide","i-lucide-chromium",{"title":20,"path":21,"stem":22,"icon":23},"Auth Module: Server Guide","/en/auth-module/server-guide","en/1.auth-module/3.server-guide","i-lucide-server",{"title":25,"path":26,"stem":27,"icon":28},"Auth Module: FAQ","/en/auth-module/faq","en/1.auth-module/9.faq","i-lucide-message-circle-question-mark",false,{"id":31,"title":15,"body":32,"description":997,"extension":998,"links":999,"meta":1003,"navigation":1004,"path":16,"seo":1005,"stem":17,"__hash__":1006},"docs_en/en/1.auth-module/2.client-guide.md",{"type":33,"value":34,"toc":981},"minimark",[35,39,74,79,82,104,107,113,119,234,239,268,272,312,316,326,333,347,381,432,436,669,673,849,853,876,880,955,959,977],[36,37,38],"p",{},"This module ships a collection of Vue composables and Nuxt plugins that make it easy to work with Jamflow Auth Service inside Nuxt applications. This document walks through the client-facing primitives, how they interact with the Auth backend, and how to integrate them in your app.",[40,41,42,48],"warning",{},[36,43,44],{},[45,46,47],"strong",{},"Prerequisites",[49,50,51,55,71],"ul",{},[52,53,54],"li",{},"Your Auth Service instance needs to be deployed in your service contract.",[52,56,57,58,62,63,66,67,70],{},"The module must be registered in ",[59,60,61],"code",{},"nuxt.config.ts"," and configured with at least ",[59,64,65],{},"issuer"," and ",[59,68,69],{},"audience",".",[52,72,73],{},"Cookies for ID, access, and refresh tokens are managed automatically by the module; ensure they are not blocked by your deployment setup.",[75,76,78],"h2",{"id":77},"session-bootstrap","Session bootstrap",[36,80,81],{},"Two Nuxt plugins are in charge of keeping the session fresh across navigation and hydration:",[49,83,84,98],{},[52,85,86,89,90,93,94,97],{},[59,87,88],{},"session.server",": runs before the server render. It populates the payload with a ",[59,91,92],{},"isCached"," flag and, when the request is freshly rendered, calls ",[59,95,96],{},"useUserSession().fetch()"," to decode the latest ID and access tokens.",[52,99,100,103],{},[59,101,102],{},"session.client",": runs on the client during hydration. If the page was delivered from payload cache or static prerendering, it fetches the session after the app mounts to avoid serving stale data.",[36,105,106],{},"You normally do not need to import these plugins manually; they are auto-registered when the module is installed.",[75,108,110],{"id":109},"useusersession",[59,111,112],{},"useUserSession()",[36,114,115,118],{},[59,116,117],{},"useUserSession"," is the primary composable exposed by the module. It transparently refreshes cookies, talks to the server proxy routes, and exposes reactive state for the logged-in user.",[120,121,126],"pre",{"className":122,"code":123,"language":124,"meta":125,"style":125},"language-ts shiki shiki-themes material-theme-lighter material-theme material-theme-palenight","const {\n  user,       // Computed\u003CIDTokenClaims | null>\n  access,     // Computed\u003CAccessTokenClaims | null>\n  loggedIn,   // Computed\u003Cboolean>\n  login,\n  requestAccess,\n  fetch,\n  refresh,\n  clear,\n} = useUserSession()\n","ts","",[59,127,128,141,155,166,177,186,194,202,210,218],{"__ignoreMap":125},[129,130,133,137],"span",{"class":131,"line":132},"line",1,[129,134,136],{"class":135},"spNyl","const",[129,138,140],{"class":139},"sMK4o"," {\n",[129,142,144,148,151],{"class":131,"line":143},2,[129,145,147],{"class":146},"sTEyZ","  user",[129,149,150],{"class":139},",",[129,152,154],{"class":153},"sHwdD","       // Computed\u003CIDTokenClaims | null>\n",[129,156,158,161,163],{"class":131,"line":157},3,[129,159,160],{"class":146},"  access",[129,162,150],{"class":139},[129,164,165],{"class":153},"     // Computed\u003CAccessTokenClaims | null>\n",[129,167,169,172,174],{"class":131,"line":168},4,[129,170,171],{"class":146},"  loggedIn",[129,173,150],{"class":139},[129,175,176],{"class":153},"   // Computed\u003Cboolean>\n",[129,178,180,183],{"class":131,"line":179},5,[129,181,182],{"class":146},"  login",[129,184,185],{"class":139},",\n",[129,187,189,192],{"class":131,"line":188},6,[129,190,191],{"class":146},"  requestAccess",[129,193,185],{"class":139},[129,195,197,200],{"class":131,"line":196},7,[129,198,199],{"class":146},"  fetch",[129,201,185],{"class":139},[129,203,205,208],{"class":131,"line":204},8,[129,206,207],{"class":146},"  refresh",[129,209,185],{"class":139},[129,211,213,216],{"class":131,"line":212},9,[129,214,215],{"class":146},"  clear",[129,217,185],{"class":139},[129,219,221,224,227,231],{"class":131,"line":220},10,[129,222,223],{"class":139},"}",[129,225,226],{"class":139}," =",[129,228,230],{"class":229},"s2Zo4"," useUserSession",[129,232,233],{"class":146},"()\n",[235,236,238],"h3",{"id":237},"state-accessors","State accessors",[49,240,241,251,260],{},[52,242,243,246,247,250],{},[59,244,245],{},"user",": ID token claims (subject, email, team, etc.). ",[59,248,249],{},"null"," when the visitor is anonymous or the token can't be verified.",[52,252,253,256,257,70],{},[59,254,255],{},"access",": Access token claims, including the serialized permission codes that drive ",[59,258,259],{},"usePermissions",[52,261,262,265,266,70],{},[59,263,264],{},"loggedIn",": Convenience boolean derived from ",[59,267,245],{},[235,269,271],{"id":270},"actions","Actions",[49,273,274,284,290,296,302],{},[52,275,276,279,280,283],{},[59,277,278],{},"login(email, password)",": Calls ",[59,281,282],{},"/_auth-api/auth/login",", sets cookies, fetches access permissions, and resolves when the session is ready.",[52,285,286,289],{},[59,287,288],{},"requestAccess(teamId?)",": Manually request a fresh access token for the current user. This is useful when switching team contexts.",[52,291,292,295],{},[59,293,294],{},"fetch()",": Re-reads cookies, validates tokens against the JWKS endpoint, and updates local state. You rarely call this directly because the plugins do it for you.",[52,297,298,301],{},[59,299,300],{},"refresh()",": Uses the refresh token endpoint to obtain new ID and access tokens.",[52,303,304,307,308,311],{},[59,305,306],{},"clear()",": Logs the user out by deleting cookies via ",[59,309,310],{},"/_auth-api/auth/session"," endpoint and resetting in-memory state.",[235,313,315],{"id":314},"working-with-fetch-contexts","Working with fetch contexts",[36,317,318,319,322,323,325],{},"The composable automatically switches between ",[59,320,321],{},"$fetch"," on the client and the request-scoped ",[59,324,321],{}," on the server. This is particularly important when building custom plugins or middlewares. It means the same code works in components, server routes, and Nitro handlers without additional wiring.",[75,327,329,330],{"id":328},"handling-permissions-with-usepermissions","Handling permissions with ",[59,331,332],{},"usePermissions()",[36,334,335,336,339,340,343,344,346],{},"Permissions are encoded in your access token as short codes (for example ",[59,337,338],{},"@blog:cru"," for global create/read/update on the ",[59,341,342],{},"blog"," topic). ",[59,345,259],{}," translates those strings into a descriptive data structure and gives you helpers to guard UI and pages.",[120,348,350],{"className":122,"code":349,"language":124,"meta":125,"style":125},"const { permissions, hasPermission, pagePermission } = usePermissions()\n",[59,351,352],{"__ignoreMap":125},[129,353,354,356,359,362,364,367,369,372,374,376,379],{"class":131,"line":132},[129,355,136],{"class":135},[129,357,358],{"class":139}," {",[129,360,361],{"class":146}," permissions",[129,363,150],{"class":139},[129,365,366],{"class":146}," hasPermission",[129,368,150],{"class":139},[129,370,371],{"class":146}," pagePermission ",[129,373,223],{"class":139},[129,375,226],{"class":139},[129,377,378],{"class":229}," usePermissions",[129,380,233],{"class":146},[49,382,383,400,414],{},[52,384,385,388,389,392,393,66,396,399],{},[59,386,387],{},"permissions",": A computed object of type ",[59,390,391],{},"DecryptedPermissions"," separating ",[59,394,395],{},"team",[59,397,398],{},"global"," scopes.",[52,401,402,405,406,409,410,413],{},[59,403,404],{},"hasPermission(check)",": Return ",[59,407,408],{},"true"," if the current access token grants all requested actions for the given topic. Set ",[59,411,412],{},"check.team = true"," to look at team-scoped grants; otherwise the global scope is used.",[52,415,416,419,420,423,424,427,428,431],{},[59,417,418],{},"pagePermission(check, { redirect? })",": Returns the full ",[59,421,422],{},"ResourcePermissions"," object for the topic. When the user lacks access you can opt-in to a redirect (default ",[59,425,426],{},"'/'","). Without redirect it resolves to an object with all actions set to ",[59,429,430],{},"false"," so that you can render a warning state.",[235,433,435],{"id":434},"example-guarding-a-page","Example: guarding a page",[120,437,441],{"className":438,"code":439,"language":440,"meta":125,"style":125},"language-vue shiki shiki-themes material-theme-lighter material-theme material-theme-palenight","const { pagePermission } = usePermissions()\n\n\u003Cscript setup lang=\"ts\">\nconst blogPerms = await pagePermission({\n  topic: 'blog-posts',\n  actions: ['read'],\n})\n\u003C/script>\n\n\u003Ctemplate>\n  \u003Csection v-if=\"blogPerms.read\">\n    \u003C!-- Secured content -->\n  \u003C/section>\n  \u003CNuxtErrorBoundary v-else>\n    \u003Cp>You don't have access to blog posts yet.\u003C/p>\n  \u003C/NuxtErrorBoundary>\n\u003C/template>\n","vue",[59,442,443,448,454,483,505,524,546,553,562,566,575,602,608,618,631,651,660],{"__ignoreMap":125},[129,444,445],{"class":131,"line":132},[129,446,447],{"class":146},"const { pagePermission } = usePermissions()\n",[129,449,450],{"class":131,"line":143},[129,451,453],{"emptyLinePlaceholder":452},true,"\n",[129,455,456,459,463,466,469,472,475,478,480],{"class":131,"line":157},[129,457,458],{"class":139},"\u003C",[129,460,462],{"class":461},"swJcz","script",[129,464,465],{"class":135}," setup",[129,467,468],{"class":135}," lang",[129,470,471],{"class":139},"=",[129,473,474],{"class":139},"\"",[129,476,124],{"class":477},"sfazB",[129,479,474],{"class":139},[129,481,482],{"class":139},">\n",[129,484,485,487,490,492,496,499,502],{"class":131,"line":168},[129,486,136],{"class":135},[129,488,489],{"class":146}," blogPerms ",[129,491,471],{"class":139},[129,493,495],{"class":494},"s7zQu"," await",[129,497,498],{"class":229}," pagePermission",[129,500,501],{"class":146},"(",[129,503,504],{"class":139},"{\n",[129,506,507,510,513,516,519,522],{"class":131,"line":179},[129,508,509],{"class":461},"  topic",[129,511,512],{"class":139},":",[129,514,515],{"class":139}," '",[129,517,518],{"class":477},"blog-posts",[129,520,521],{"class":139},"'",[129,523,185],{"class":139},[129,525,526,529,531,534,536,539,541,544],{"class":131,"line":188},[129,527,528],{"class":461},"  actions",[129,530,512],{"class":139},[129,532,533],{"class":146}," [",[129,535,521],{"class":139},[129,537,538],{"class":477},"read",[129,540,521],{"class":139},[129,542,543],{"class":146},"]",[129,545,185],{"class":139},[129,547,548,550],{"class":131,"line":196},[129,549,223],{"class":139},[129,551,552],{"class":146},")\n",[129,554,555,558,560],{"class":131,"line":204},[129,556,557],{"class":139},"\u003C/",[129,559,462],{"class":461},[129,561,482],{"class":139},[129,563,564],{"class":131,"line":212},[129,565,453],{"emptyLinePlaceholder":452},[129,567,568,570,573],{"class":131,"line":220},[129,569,458],{"class":139},[129,571,572],{"class":461},"template",[129,574,482],{"class":139},[129,576,578,581,584,587,589,591,594,596,598,600],{"class":131,"line":577},11,[129,579,580],{"class":139},"  \u003C",[129,582,583],{"class":461},"section",[129,585,586],{"class":494}," v-if",[129,588,471],{"class":139},[129,590,474],{"class":139},[129,592,593],{"class":146},"blogPerms",[129,595,70],{"class":139},[129,597,538],{"class":146},[129,599,474],{"class":139},[129,601,482],{"class":139},[129,603,605],{"class":131,"line":604},12,[129,606,607],{"class":153},"    \u003C!-- Secured content -->\n",[129,609,611,614,616],{"class":131,"line":610},13,[129,612,613],{"class":139},"  \u003C/",[129,615,583],{"class":461},[129,617,482],{"class":139},[129,619,621,623,626,629],{"class":131,"line":620},14,[129,622,580],{"class":139},[129,624,625],{"class":461},"NuxtErrorBoundary",[129,627,628],{"class":494}," v-else",[129,630,482],{"class":139},[129,632,634,637,639,642,645,647,649],{"class":131,"line":633},15,[129,635,636],{"class":139},"    \u003C",[129,638,36],{"class":461},[129,640,641],{"class":139},">",[129,643,644],{"class":146},"You don't have access to blog posts yet.",[129,646,557],{"class":139},[129,648,36],{"class":461},[129,650,482],{"class":139},[129,652,654,656,658],{"class":131,"line":653},16,[129,655,613],{"class":139},[129,657,625],{"class":461},[129,659,482],{"class":139},[129,661,663,665,667],{"class":131,"line":662},17,[129,664,557],{"class":139},[129,666,572],{"class":461},[129,668,482],{"class":139},[235,670,672],{"id":671},"example-feature-flagging-ui-controls","Example: feature flagging UI controls",[120,674,676],{"className":438,"code":675,"language":440,"meta":125,"style":125},"\u003Cscript setup lang=\"ts\">\nconst { hasPermission } = usePermissions()\n\nconst canPublish = computed(() => hasPermission({\n  topic: 'blog-posts',\n  actions: ['execute'],\n}))\n\u003C/script>\n\n\u003Ctemplate>\n  \u003CUButton :disabled=\"!canPublish\">Publish\u003C/UButton>\n\u003C/template>\n",[59,677,678,698,715,719,745,759,778,785,793,797,805,841],{"__ignoreMap":125},[129,679,680,682,684,686,688,690,692,694,696],{"class":131,"line":132},[129,681,458],{"class":139},[129,683,462],{"class":461},[129,685,465],{"class":135},[129,687,468],{"class":135},[129,689,471],{"class":139},[129,691,474],{"class":139},[129,693,124],{"class":477},[129,695,474],{"class":139},[129,697,482],{"class":139},[129,699,700,702,704,707,709,711,713],{"class":131,"line":143},[129,701,136],{"class":135},[129,703,358],{"class":139},[129,705,706],{"class":146}," hasPermission ",[129,708,223],{"class":139},[129,710,226],{"class":139},[129,712,378],{"class":229},[129,714,233],{"class":146},[129,716,717],{"class":131,"line":157},[129,718,453],{"emptyLinePlaceholder":452},[129,720,721,723,726,728,731,733,736,739,741,743],{"class":131,"line":168},[129,722,136],{"class":135},[129,724,725],{"class":146}," canPublish ",[129,727,471],{"class":139},[129,729,730],{"class":229}," computed",[129,732,501],{"class":146},[129,734,735],{"class":139},"()",[129,737,738],{"class":135}," =>",[129,740,366],{"class":229},[129,742,501],{"class":146},[129,744,504],{"class":139},[129,746,747,749,751,753,755,757],{"class":131,"line":179},[129,748,509],{"class":461},[129,750,512],{"class":139},[129,752,515],{"class":139},[129,754,518],{"class":477},[129,756,521],{"class":139},[129,758,185],{"class":139},[129,760,761,763,765,767,769,772,774,776],{"class":131,"line":188},[129,762,528],{"class":461},[129,764,512],{"class":139},[129,766,533],{"class":146},[129,768,521],{"class":139},[129,770,771],{"class":477},"execute",[129,773,521],{"class":139},[129,775,543],{"class":146},[129,777,185],{"class":139},[129,779,780,782],{"class":131,"line":196},[129,781,223],{"class":139},[129,783,784],{"class":146},"))\n",[129,786,787,789,791],{"class":131,"line":204},[129,788,557],{"class":139},[129,790,462],{"class":461},[129,792,482],{"class":139},[129,794,795],{"class":131,"line":212},[129,796,453],{"emptyLinePlaceholder":452},[129,798,799,801,803],{"class":131,"line":220},[129,800,458],{"class":139},[129,802,572],{"class":461},[129,804,482],{"class":139},[129,806,807,809,812,815,818,820,822,825,828,830,832,835,837,839],{"class":131,"line":577},[129,808,580],{"class":139},[129,810,811],{"class":461},"UButton",[129,813,814],{"class":139}," :",[129,816,817],{"class":135},"disabled",[129,819,471],{"class":139},[129,821,474],{"class":139},[129,823,824],{"class":139},"!",[129,826,827],{"class":146},"canPublish",[129,829,474],{"class":139},[129,831,641],{"class":139},[129,833,834],{"class":146},"Publish",[129,836,557],{"class":139},[129,838,811],{"class":461},[129,840,482],{"class":139},[129,842,843,845,847],{"class":131,"line":604},[129,844,557],{"class":139},[129,846,572],{"class":461},[129,848,482],{"class":139},[75,850,852],{"id":851},"token-lifecycle","Token lifecycle",[49,854,855,867,873],{},[52,856,857,858,66,860,862,863,866],{},"Cookies are refreshed automatically on every call to ",[59,859,294],{},[59,861,300],{}," via Nuxt's ",[59,864,865],{},"refreshCookie"," helper.",[52,868,869,870,872],{},"When an access token is expired, ",[59,871,117],{}," transparently requests a fresh one and forwards Set-Cookie headers from the API to the browser.",[52,874,875],{},"JWKS keys are cached in memory for up to one hour to avoid unnecessary network traffic.",[75,877,879],{"id":878},"troubleshooting","Troubleshooting",[881,882,883,899],"table",{},[884,885,886],"thead",{},[887,888,889,893,896],"tr",{},[890,891,892],"th",{},"Symptom",[890,894,895],{},"Likely cause",[890,897,898],{},"Fix",[900,901,902,929,944],"tbody",{},[887,903,904,913,922],{},[905,906,907,910,911],"td",{},[59,908,909],{},"useUserSession().user"," is always ",[59,912,249],{},[905,914,915,916,918,919,921],{},"Missing or invalid ",[59,917,65],{}," / ",[59,920,69],{}," runtime config",[905,923,924,925,928],{},"Verify ",[59,926,927],{},"nuxt.config"," and environment variables.",[887,930,931,934,937],{},[905,932,933],{},"Login succeeds but permissions are empty",[905,935,936],{},"Access token not requested, or permission codes not configured server-side",[905,938,939,940,943],{},"Ensure ",[59,941,942],{},"requestAccess()"," runs after login and the Auth Service issues permissions.",[887,945,946,949,952],{},[905,947,948],{},"Client navigations forget session",[905,950,951],{},"Cookies blocked by domain or secure flag mismatch",[905,953,954],{},"Check deployment base URL and cookie configuration in the service.",[75,956,958],{"id":957},"next-steps","Next steps",[49,960,961,970],{},[52,962,963,964,969],{},"Review the ",[965,966,968],"a",{"href":967},"/en/auth-module/server-guide.md","Server-side Guide"," for Nitro utilities you can use in API routes.",[52,971,972,973,976],{},"Keep an eye on token expiration in long-lived tabs; consider calling ",[59,974,975],{},"useUserSession().refresh()"," from a silent timer if your UX requires it.",[978,979,980],"style",{},"html pre.shiki code .spNyl, html code.shiki .spNyl{--shiki-light:#9C3EDA;--shiki-default:#C792EA;--shiki-dark:#C792EA}html pre.shiki code .sMK4o, html code.shiki .sMK4o{--shiki-light:#39ADB5;--shiki-default:#89DDFF;--shiki-dark:#89DDFF}html pre.shiki code .sTEyZ, html code.shiki .sTEyZ{--shiki-light:#90A4AE;--shiki-default:#EEFFFF;--shiki-dark:#BABED8}html pre.shiki code .sHwdD, html code.shiki .sHwdD{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#546E7A;--shiki-default-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic}html pre.shiki code .s2Zo4, html code.shiki .s2Zo4{--shiki-light:#6182B8;--shiki-default:#82AAFF;--shiki-dark:#82AAFF}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .swJcz, html code.shiki .swJcz{--shiki-light:#E53935;--shiki-default:#F07178;--shiki-dark:#F07178}html pre.shiki code .sfazB, html code.shiki .sfazB{--shiki-light:#91B859;--shiki-default:#C3E88D;--shiki-dark:#C3E88D}html pre.shiki code .s7zQu, html code.shiki .s7zQu{--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#89DDFF;--shiki-default-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic}",{"title":125,"searchDepth":143,"depth":143,"links":982},[983,984,989,994,995,996],{"id":77,"depth":143,"text":78},{"id":109,"depth":143,"text":112,"children":985},[986,987,988],{"id":237,"depth":157,"text":238},{"id":270,"depth":157,"text":271},{"id":314,"depth":157,"text":315},{"id":328,"depth":143,"text":990,"children":991},"Handling permissions with usePermissions()",[992,993],{"id":434,"depth":157,"text":435},{"id":671,"depth":157,"text":672},{"id":851,"depth":143,"text":852},{"id":878,"depth":143,"text":879},{"id":957,"depth":143,"text":958},"Authentication and Authorization on the client side","md",[1000],{"label":1001,"to":1002},"Auth Service","https://jamflow.cloud/auth-service",{},{"icon":18},{"title":15,"description":997},"CW0k05sNbhfsDpThCMQKXlK8NT3ZSW1cSPANuMd3a_8",[1008,1010],{"title":10,"path":11,"stem":12,"description":1009,"icon":13,"children":-1},"JAMflow Authentication and Authorization",{"title":20,"path":21,"stem":22,"description":1009,"icon":23,"children":-1},1760100567291]