[{"data":1,"prerenderedAt":989},["ShallowReactive",2],{"navigation_docs_en":3,"-en-auth-module-server-guide":30,"-en-auth-module-server-guide-surround":985},[4],{"title":5,"path":6,"stem":7,"children":8,"page":29},"Auth Module","/en/auth-module","en/1.auth-module",[9,14,19,24],{"title":10,"path":11,"stem":12,"icon":13},"Auth Module: Getting Started","/en/auth-module/getting-started","en/1.auth-module/1.getting-started","i-lucide-user-lock",{"title":15,"path":16,"stem":17,"icon":18},"Auth Module: Client Guide","/en/auth-module/client-guide","en/1.auth-module/2.client-guide","i-lucide-chromium",{"title":20,"path":21,"stem":22,"icon":23},"Auth Module: Server Guide","/en/auth-module/server-guide","en/1.auth-module/3.server-guide","i-lucide-server",{"title":25,"path":26,"stem":27,"icon":28},"Auth Module: FAQ","/en/auth-module/faq","en/1.auth-module/9.faq","i-lucide-message-circle-question-mark",false,{"id":31,"title":20,"body":32,"description":975,"extension":976,"links":977,"meta":981,"navigation":982,"path":21,"seo":983,"stem":22,"__hash__":984},"docs_en/en/1.auth-module/3.server-guide.md",{"type":33,"value":34,"toc":955},"minimark",[35,39,53,58,65,117,124,128,131,138,149,155,166,334,340,347,358,362,365,374,385,391,398,404,411,554,560,563,567,570,622,629,633,639,652,655,888,894,898,930,934,951],[36,37,38],"p",{},"Jamflow Auth Module ships a set of Nitro utilities that simplify validating sessions, checking permissions, and orchestrating service-to-service calls. This guide covers the helpers you can use inside server routes, server plugins, and event handlers.",[40,41,42,43,47,48,52],"warning",{},"The module is built around JWT validation: it does ",[44,45,46],"strong",{},"not"," implement OAuth or OpenID Connect flows. Instead, your Nuxt app proxies to the Jamflow Auth Service endpoints under ",[49,50,51],"code",{},"/_auth-api/*"," and handles tokens issued by that service.",[54,55,57],"h2",{"id":56},"runtime-configuration-recap","Runtime configuration recap",[36,59,60,61,64],{},"At runtime the module expects the following properties. They are made available through ",[49,62,63],{},"useRuntimeConfig(event)",":",[66,67,68,75,81,91,101,107],"ul",{},[69,70,71,74],"li",{},[49,72,73],{},"public.auth.issuer"," – Base URL of your Auth Service instance. Used when proxying requests and fetching JWKS keys.",[69,76,77,80],{},[49,78,79],{},"public.auth.audience"," – Expected audience for access tokens.",[69,82,83,86,87,90],{},[49,84,85],{},"public.auth.jwksUrl"," – Path to retrieve the JSON Web Key Set. Defaults to ",[49,88,89],{},"/.well-known/jwks.json"," relative to the issuer.",[69,92,93,96,97,100],{},[49,94,95],{},"public.auth.idToken"," / ",[49,98,99],{},"public.auth.accessToken"," – Names and verification options for cookies.",[69,102,103,106],{},[49,104,105],{},"auth.refreshToken"," – Private configuration holding refresh token cookie settings.",[69,108,109,112,113,116],{},[49,110,111],{},"auth.apiToken"," – Optional machine-to-machine token used by ",[49,114,115],{},"createInvite",".",[36,118,119,120,123],{},"Use the module options in ",[49,121,122],{},"nuxt.config.ts"," or environment variables to populate these values.",[54,125,127],{"id":126},"session-utilities","Session utilities",[36,129,130],{},"All session helpers live under the user's identity (ID Token).",[132,133,135],"h3",{"id":134},"getusersessionevent",[49,136,137],{},"getUserSession(event)",[36,139,140,141,144,145,148],{},"Returns the decoded ",[49,142,143],{},"IDTokenClaims"," if a valid cookie is present, or ",[49,146,147],{},"undefined"," otherwise. Cached per-request to avoid repeated verification (eg: when also calling a series of middlewares).",[132,150,152],{"id":151},"requireusersessionevent",[49,153,154],{},"requireUserSession(event)",[36,156,157,158,161,162,165],{},"Same as ",[49,159,160],{},"getUserSession"," but raises a Nitro ",[49,163,164],{},"createError"," with status 401 if the visitor is unauthenticated. Use it in protected API routes:",[167,168,173],"pre",{"className":169,"code":170,"language":171,"meta":172,"style":172},"language-ts shiki shiki-themes material-theme-lighter material-theme material-theme-palenight","import { requireUserSession } from '#auth-module/server/utils/session'\n\nexport default defineEventHandler(async (event) => {\n  const session = await requireUserSession(event)\n\n  return {\n    message: `Welcome ${session.name}`,\n  }\n})\n","ts","",[49,174,175,208,215,251,276,281,289,320,326],{"__ignoreMap":172},[176,177,180,184,188,192,195,198,201,205],"span",{"class":178,"line":179},"line",1,[176,181,183],{"class":182},"s7zQu","import",[176,185,187],{"class":186},"sMK4o"," {",[176,189,191],{"class":190},"sTEyZ"," requireUserSession",[176,193,194],{"class":186}," }",[176,196,197],{"class":182}," from",[176,199,200],{"class":186}," '",[176,202,204],{"class":203},"sfazB","#auth-module/server/utils/session",[176,206,207],{"class":186},"'\n",[176,209,211],{"class":178,"line":210},2,[176,212,214],{"emptyLinePlaceholder":213},true,"\n",[176,216,218,221,224,228,231,235,238,242,245,248],{"class":178,"line":217},3,[176,219,220],{"class":182},"export",[176,222,223],{"class":182}," default",[176,225,227],{"class":226},"s2Zo4"," defineEventHandler",[176,229,230],{"class":190},"(",[176,232,234],{"class":233},"spNyl","async",[176,236,237],{"class":186}," (",[176,239,241],{"class":240},"sHdIc","event",[176,243,244],{"class":186},")",[176,246,247],{"class":233}," =>",[176,249,250],{"class":186}," {\n",[176,252,254,257,260,263,266,268,271,273],{"class":178,"line":253},4,[176,255,256],{"class":233},"  const",[176,258,259],{"class":190}," session",[176,261,262],{"class":186}," =",[176,264,265],{"class":182}," await",[176,267,191],{"class":226},[176,269,230],{"class":270},"swJcz",[176,272,241],{"class":190},[176,274,275],{"class":270},")\n",[176,277,279],{"class":178,"line":278},5,[176,280,214],{"emptyLinePlaceholder":213},[176,282,284,287],{"class":178,"line":283},6,[176,285,286],{"class":182},"  return",[176,288,250],{"class":186},[176,290,292,295,297,300,303,306,309,311,314,317],{"class":178,"line":291},7,[176,293,294],{"class":270},"    message",[176,296,64],{"class":186},[176,298,299],{"class":186}," `",[176,301,302],{"class":203},"Welcome ",[176,304,305],{"class":186},"${",[176,307,308],{"class":190},"session",[176,310,116],{"class":186},[176,312,313],{"class":190},"name",[176,315,316],{"class":186},"}`",[176,318,319],{"class":186},",\n",[176,321,323],{"class":178,"line":322},8,[176,324,325],{"class":186},"  }\n",[176,327,329,332],{"class":178,"line":328},9,[176,330,331],{"class":186},"}",[176,333,275],{"class":190},[132,335,337],{"id":336},"clearusersessionevent",[49,338,339],{},"clearUserSession(event)",[36,341,342,343,346],{},"Deletes ID, access, and refresh token cookies and notifies the Auth Service by issuing a ",[49,344,345],{},"DELETE /_auth-api/auth/session"," request. Ideal for implementing logout endpoints or revoking tokens after destructive events.",[36,348,349,350,353,354,357],{},"The session helper automatically refreshes the user session when a refresh token is nearing expiration. It calls ",[49,351,352],{},"/api/auth/refresh"," and caches the renewed tokens in ",[49,355,356],{},"event.context.authSessions"," to keep future lookups synchronous.",[54,359,361],{"id":360},"access-utilities","Access utilities",[36,363,364],{},"Access helpers focus on the access token – the one carrying permission strings.",[132,366,368,96,371],{"id":367},"getuseraccessevent-requireuseraccessevent",[49,369,370],{},"getUserAccess(event)",[49,372,373],{},"requireUserAccess(event)",[36,375,376,377,380,381,384],{},"Both functions verify the access token using the configured JWKS key set. If the cookie is missing or expired, the module attempts to refresh it via ",[49,378,379],{},"/_auth-api/auth/token",". The ",[49,382,383],{},"require*"," variant throws a 401 when no valid token can be issued.",[132,386,388],{"id":387},"clearuseraccessevent",[49,389,390],{},"clearUserAccess(event)",[36,392,393,394,397],{},"Deletes the access token by hitting ",[49,395,396],{},"DELETE /_auth-api/auth/token"," and removing the associated cookie.",[132,399,401],{"id":400},"requireuserpermissionevent-required",[49,402,403],{},"requireUserPermission(event, required)",[36,405,406,407,410],{},"Checks whether the current user has all actions listed in ",[49,408,409],{},"required.actions"," for the given topic. It returns a rich object when the check passes:",[167,412,414],{"className":169,"code":413,"language":171,"meta":172,"style":172},"const result = await requireUserPermission(event, {\n  topic: 'documents',\n  actions: ['read', 'update'],\n  team: true,          // Force team-scoped permissions\n})\n\n// result => {\n//   accessToken: AccessTokenClaims,\n//   userId: string,\n//   teamId: string | null,\n//   isGlobal: boolean,\n//   selector: string | null,\n// }\n",[49,415,416,440,457,488,505,511,515,520,525,530,536,542,548],{"__ignoreMap":172},[176,417,418,421,424,427,429,432,435,438],{"class":178,"line":179},[176,419,420],{"class":233},"const",[176,422,423],{"class":190}," result ",[176,425,426],{"class":186},"=",[176,428,265],{"class":182},[176,430,431],{"class":226}," requireUserPermission",[176,433,434],{"class":190},"(event",[176,436,437],{"class":186},",",[176,439,250],{"class":186},[176,441,442,445,447,449,452,455],{"class":178,"line":210},[176,443,444],{"class":270},"  topic",[176,446,64],{"class":186},[176,448,200],{"class":186},[176,450,451],{"class":203},"documents",[176,453,454],{"class":186},"'",[176,456,319],{"class":186},[176,458,459,462,464,467,469,472,474,476,478,481,483,486],{"class":178,"line":217},[176,460,461],{"class":270},"  actions",[176,463,64],{"class":186},[176,465,466],{"class":190}," [",[176,468,454],{"class":186},[176,470,471],{"class":203},"read",[176,473,454],{"class":186},[176,475,437],{"class":186},[176,477,200],{"class":186},[176,479,480],{"class":203},"update",[176,482,454],{"class":186},[176,484,485],{"class":190},"]",[176,487,319],{"class":186},[176,489,490,493,495,499,501],{"class":178,"line":253},[176,491,492],{"class":270},"  team",[176,494,64],{"class":186},[176,496,498],{"class":497},"sfNiH"," true",[176,500,437],{"class":186},[176,502,504],{"class":503},"sHwdD","          // Force team-scoped permissions\n",[176,506,507,509],{"class":178,"line":278},[176,508,331],{"class":186},[176,510,275],{"class":190},[176,512,513],{"class":178,"line":283},[176,514,214],{"emptyLinePlaceholder":213},[176,516,517],{"class":178,"line":291},[176,518,519],{"class":503},"// result => {\n",[176,521,522],{"class":178,"line":322},[176,523,524],{"class":503},"//   accessToken: AccessTokenClaims,\n",[176,526,527],{"class":178,"line":328},[176,528,529],{"class":503},"//   userId: string,\n",[176,531,533],{"class":178,"line":532},10,[176,534,535],{"class":503},"//   teamId: string | null,\n",[176,537,539],{"class":178,"line":538},11,[176,540,541],{"class":503},"//   isGlobal: boolean,\n",[176,543,545],{"class":178,"line":544},12,[176,546,547],{"class":503},"//   selector: string | null,\n",[176,549,551],{"class":178,"line":550},13,[176,552,553],{"class":503},"// }\n",[36,555,556,557,559],{},"When permissions are missing, a 403 ",[49,558,164],{}," is thrown. This makes it straightforward to plug into Nitro route middleware.",[36,561,562],{},"Under the hood the helper relies on the serialized permissions to match the CRUD operations encoded in the access token.",[54,564,566],{"id":565},"proxy-routes","Proxy routes",[36,568,569],{},"The module exposes two server routes that forward requests to the Auth Service while keeping cookies scoped to your Nuxt domain:",[571,572,573,589],"table",{},[574,575,576],"thead",{},[577,578,579,583,586],"tr",{},[580,581,582],"th",{},"Route",[580,584,585],{},"Target",[580,587,588],{},"Use case",[590,591,592,608],"tbody",{},[577,593,594,600,605],{},[595,596,597],"td",{},[49,598,599],{},"/_auth-api/**",[595,601,602],{},[49,603,604],{},"${issuer}/api/**",[595,606,607],{},"Primary login, refresh, logout, and token endpoints.",[577,609,610,614,619],{},[595,611,612],{},[49,613,89],{},[595,615,616],{},[49,617,618],{},"${issuer}/.well-known/jwks.json",[595,620,621],{},"Retrieve signing keys for ID/access token verification.",[36,623,624,625,628],{},"Since these are registered as Nitro handlers, you can call them using ",[49,626,627],{},"$fetch"," within your app without dealing with cross-domain cookies.",[54,630,632],{"id":631},"service-utilities","Service utilities",[132,634,636],{"id":635},"createinviteinvite-invite",[49,637,638],{},"createInvite(invite | invite[])",[36,640,641,642,644,645,647,648,651],{},"Helps Jamflow services invite new members via the Auth Service. It accepts either a single invite payload or an array. The helper reads ",[49,643,111],{}," and ",[49,646,73],{}," from runtime config and performs a POST request to ",[49,649,650],{},"${issuer}/api/invites",". The return type includes the invite record and the freshly generated plaintext invite token.",[36,653,654],{},"Example:",[167,656,658],{"className":169,"code":657,"language":171,"meta":172,"style":172},"import { createInvite } from '#auth-module/server/utils/service-utils'\n\nexport default defineEventHandler(async (event) => {\n  await requireUserPermission(event, {\n    topic: 'team-members',\n    actions: ['create'],\n    team: true,\n  })\n\n  const result = await createInvite({\n    email: 'alex@example.com',\n    teamId: event.context.params!.teamId,\n    permissions: ['#team-members:cr'],\n  })\n\n  return result\n})\n",[49,659,660,680,684,706,721,737,757,768,775,779,797,813,841,861,868,873,881],{"__ignoreMap":172},[176,661,662,664,666,669,671,673,675,678],{"class":178,"line":179},[176,663,183],{"class":182},[176,665,187],{"class":186},[176,667,668],{"class":190}," createInvite",[176,670,194],{"class":186},[176,672,197],{"class":182},[176,674,200],{"class":186},[176,676,677],{"class":203},"#auth-module/server/utils/service-utils",[176,679,207],{"class":186},[176,681,682],{"class":178,"line":210},[176,683,214],{"emptyLinePlaceholder":213},[176,685,686,688,690,692,694,696,698,700,702,704],{"class":178,"line":217},[176,687,220],{"class":182},[176,689,223],{"class":182},[176,691,227],{"class":226},[176,693,230],{"class":190},[176,695,234],{"class":233},[176,697,237],{"class":186},[176,699,241],{"class":240},[176,701,244],{"class":186},[176,703,247],{"class":233},[176,705,250],{"class":186},[176,707,708,711,713,715,717,719],{"class":178,"line":253},[176,709,710],{"class":182},"  await",[176,712,431],{"class":226},[176,714,230],{"class":270},[176,716,241],{"class":190},[176,718,437],{"class":186},[176,720,250],{"class":186},[176,722,723,726,728,730,733,735],{"class":178,"line":278},[176,724,725],{"class":270},"    topic",[176,727,64],{"class":186},[176,729,200],{"class":186},[176,731,732],{"class":203},"team-members",[176,734,454],{"class":186},[176,736,319],{"class":186},[176,738,739,742,744,746,748,751,753,755],{"class":178,"line":283},[176,740,741],{"class":270},"    actions",[176,743,64],{"class":186},[176,745,466],{"class":270},[176,747,454],{"class":186},[176,749,750],{"class":203},"create",[176,752,454],{"class":186},[176,754,485],{"class":270},[176,756,319],{"class":186},[176,758,759,762,764,766],{"class":178,"line":291},[176,760,761],{"class":270},"    team",[176,763,64],{"class":186},[176,765,498],{"class":497},[176,767,319],{"class":186},[176,769,770,773],{"class":178,"line":322},[176,771,772],{"class":186},"  }",[176,774,275],{"class":270},[176,776,777],{"class":178,"line":328},[176,778,214],{"emptyLinePlaceholder":213},[176,780,781,783,786,788,790,792,794],{"class":178,"line":532},[176,782,256],{"class":233},[176,784,785],{"class":190}," result",[176,787,262],{"class":186},[176,789,265],{"class":182},[176,791,668],{"class":226},[176,793,230],{"class":270},[176,795,796],{"class":186},"{\n",[176,798,799,802,804,806,809,811],{"class":178,"line":538},[176,800,801],{"class":270},"    email",[176,803,64],{"class":186},[176,805,200],{"class":186},[176,807,808],{"class":203},"alex@example.com",[176,810,454],{"class":186},[176,812,319],{"class":186},[176,814,815,818,820,823,825,828,830,833,836,839],{"class":178,"line":544},[176,816,817],{"class":270},"    teamId",[176,819,64],{"class":186},[176,821,822],{"class":190}," event",[176,824,116],{"class":186},[176,826,827],{"class":190},"context",[176,829,116],{"class":186},[176,831,832],{"class":190},"params",[176,834,835],{"class":186},"!.",[176,837,838],{"class":190},"teamId",[176,840,319],{"class":186},[176,842,843,846,848,850,852,855,857,859],{"class":178,"line":550},[176,844,845],{"class":270},"    permissions",[176,847,64],{"class":186},[176,849,466],{"class":270},[176,851,454],{"class":186},[176,853,854],{"class":203},"#team-members:cr",[176,856,454],{"class":186},[176,858,485],{"class":270},[176,860,319],{"class":186},[176,862,864,866],{"class":178,"line":863},14,[176,865,772],{"class":186},[176,867,275],{"class":270},[176,869,871],{"class":178,"line":870},15,[176,872,214],{"emptyLinePlaceholder":213},[176,874,876,878],{"class":178,"line":875},16,[176,877,286],{"class":182},[176,879,880],{"class":190}," result\n",[176,882,884,886],{"class":178,"line":883},17,[176,885,331],{"class":186},[176,887,275],{"class":190},[36,889,890,891,893],{},"Make sure ",[49,892,111],{}," is configured with a machine token issued by the Auth Service. Otherwise the helper will throw a 500-level error.",[54,895,897],{"id":896},"error-handling-patterns","Error handling patterns",[66,899,900,906,912],{},[69,901,902,903,905],{},"All ",[49,904,383],{}," functions throw Nitro errors; wrap them in try/catch if you need to customize the response.",[69,907,908,909,911],{},"Token verification logs decoding issues to the server console but fails gracefully by returning ",[49,910,147],{},". Build your handlers assuming that tokens can be absent or invalid.",[69,913,914,915,918,919,922,923,925,926,929],{},"Permission checks differentiate between team-scoped (",[49,916,917],{},"#",") and global (",[49,920,921],{},"@",") grants. Pass ",[49,924,838],{}," or ",[49,927,928],{},"team: true"," to enforce the correct scope.",[54,931,933],{"id":932},"related-docs","Related docs",[66,935,936,944],{},[69,937,938,943],{},[939,940,942],"a",{"href":941},"/en/auth-module/getting-started.md","Module Overview"," – configuration reference and quickstart.",[69,945,946,950],{},[939,947,949],{"href":948},"/en/auth-module/client-guide.md","Client-side Guide"," – using the composables in Vue components.",[952,953,954],"style",{},"html pre.shiki code .s7zQu, html code.shiki .s7zQu{--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#89DDFF;--shiki-default-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic}html pre.shiki code .sMK4o, html code.shiki .sMK4o{--shiki-light:#39ADB5;--shiki-default:#89DDFF;--shiki-dark:#89DDFF}html pre.shiki code .sTEyZ, html code.shiki .sTEyZ{--shiki-light:#90A4AE;--shiki-default:#EEFFFF;--shiki-dark:#BABED8}html pre.shiki code .sfazB, html code.shiki .sfazB{--shiki-light:#91B859;--shiki-default:#C3E88D;--shiki-dark:#C3E88D}html pre.shiki code .s2Zo4, html code.shiki .s2Zo4{--shiki-light:#6182B8;--shiki-default:#82AAFF;--shiki-dark:#82AAFF}html pre.shiki code .spNyl, html code.shiki .spNyl{--shiki-light:#9C3EDA;--shiki-default:#C792EA;--shiki-dark:#C792EA}html pre.shiki code .sHdIc, html code.shiki .sHdIc{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#EEFFFF;--shiki-default-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic}html pre.shiki code .swJcz, html code.shiki .swJcz{--shiki-light:#E53935;--shiki-default:#F07178;--shiki-dark:#F07178}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sfNiH, html code.shiki .sfNiH{--shiki-light:#FF5370;--shiki-default:#FF9CAC;--shiki-dark:#FF9CAC}html pre.shiki code .sHwdD, html code.shiki .sHwdD{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#546E7A;--shiki-default-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic}",{"title":172,"searchDepth":210,"depth":210,"links":956},[957,958,963,969,970,973,974],{"id":56,"depth":210,"text":57},{"id":126,"depth":210,"text":127,"children":959},[960,961,962],{"id":134,"depth":217,"text":137},{"id":151,"depth":217,"text":154},{"id":336,"depth":217,"text":339},{"id":360,"depth":210,"text":361,"children":964},[965,967,968],{"id":367,"depth":217,"text":966},"getUserAccess(event) / requireUserAccess(event)",{"id":387,"depth":217,"text":390},{"id":400,"depth":217,"text":403},{"id":565,"depth":210,"text":566},{"id":631,"depth":210,"text":632,"children":971},[972],{"id":635,"depth":217,"text":638},{"id":896,"depth":210,"text":897},{"id":932,"depth":210,"text":933},"JAMflow Authentication and Authorization","md",[978],{"label":979,"to":980},"Auth Service","https://jamflow.cloud/auth-service",{},{"icon":23},{"title":20,"description":975},"euXj31HnKnBBVaPwyaHOCpuUJN-4mGwAsJJND1yo4Oo",[986,987],{"title":15,"path":16,"stem":17,"description":975,"icon":18,"children":-1},{"title":25,"path":26,"stem":27,"description":988,"icon":28,"children":-1},"JAMflow Authentication and Authorization ",1760008312897]